import module com.livecode.objc
  use com.livecode.foreign
  use com.livecode.arithmetic
  use com.livecode.binary
  use com.livecode.list
  use com.livecode.logic
  use com.livecode.string
  use com.livecode.type
  use com.livecode.array
  foreign type ObjcObject
  foreign type ObjcId
  foreign type ObjcRetainedId
  foreign type ObjcAutoreleasedId
  handler StringToNSString(in pString as String) returns ObjcObject
  handler StringFromNSString(in pObjcString as ObjcObject) returns String
  handler DataToNSData(in pData as Data) returns ObjcObject
  handler DataFromNSData(in pObjcData as ObjcObject) returns Data
  handler NumberToNSNumber(in pNumber as Number) returns ObjcObject
  handler NumberFromNSNumber(in pObjcNumber as ObjcObject) returns Number
  handler ListToNSArray(in pList as List) returns ObjcObject
  handler ListFromNSArray(in pObjcArray as ObjcObject) returns List
  handler ArrayToNSDictionary(in pArray as Array) returns ObjcObject
  handler ArrayFromNSDictionary(in pObjcArray as ObjcObject) returns Array
  handler type ObjcActionProxyHandler(in pSender as ObjcObject, in pContext as optional any) returns nothing
  handler ObjcProxyGetTarget(in pHandler as ObjcActionProxyHandler, in pContext as optional any) returns ObjcObject
  handler ObjcProxyGetAction() returns UIntPtr
  handler PointerToObjcObject(in pPointer as optional Pointer) returns optional ObjcObject
  handler PointerFromObjcObject(in pObjcObject as ObjcObject) returns optional Pointer
  handler CreateObjcDelegate(in pProtocol as String, in pHandlerMapping as Array) returns optional ObjcObject
  handler CreateObjcDelegateWithContext(in pProtocol as String, in pHandlerMapping as Array, in pContext as any) returns optional ObjcObject
  handler CreateObjcInformalDelegate(in pProtocol as List, in pHandlerMapping as Array) returns optional ObjcObject
  handler CreateObjcInformalDelegateWithContext(in pProtocol as List, in pHandlerMapping as Array, in pContext as any) returns optional ObjcObject
  foreign type _ObjcBlockDescriptor
  foreign type _ObjcBlock
  type ObjcBlockPointer is Pointer
  handler CreateObjcBlockPointerFromHandler(in pHandler as any, out rBlockPtr as optional ObjcBlockPointer) returns Boolean
  handler DeleteObjcBlockPointer(in pBlockPointer as Pointer) returns optional any
end module
