Library: com.livecode.library.androidaudiorecorder

Type: library

Summary:
This library provides Android audio recording functionality, via the 
android.media.MediaRecorder class.

Description:
Use this library to record audio on Android. 

>*Note:* This library requires RECORD_AUDIO, WRITE_EXTERNAL_STORAGE and
> CAPTURE_AUDIO_OUTPUT permissions. These will be automatically added to 
> the application manifest when an application including this library is 
> built.

version: 1.0.0

author: LiveCode

os: android


Name: androidRecorderStartRecording

Type: handler

Syntax: androidRecorderStartRecording(<pFileName>)

Summary: Start recording an audio file, using the given filename

Example:
   local tFilePath
   put specialFolderPath("external documents") & slash & "recording.mp4" \
      into tFilePath   
   androidRecorderStartRecording tFilePath

Parameters: 

pFileName: The absolute filename of the output file

Description:
Use the <androidRecorderStartRecording> handler to start recording audio
on Android using the input source, compression type and output format 
selected using the <androidRecorderSetRecordInput>, 
<androidRecorderSetRecordCompressionType>, and <androidRecorderSetRecordFormat>
handlers. The default input source, compression and output format are 
built-in microphone, AMR-NB and 3gpp respectively.

References:
androidRecorderSetRecordInput (handler), 
androidRecorderSetRecordCompressionType (handler), 
androidRecorderSetRecordFormat (handler)



Name: androidRecorderSetRecordCompressionType

Type: handler

Syntax: androidRecorderSetRecordCompressionType(<pCompressionType>)

Summary: Set the record compression type

Example: androidRecorderSetRecordCompressionType "AMR NB"

Parameters: 

pCompressionType:
The record compression type
- "Default": The default compression type
- "AMR NB": AMR Narrowband
- "AMR WB": AMR Wideband
- "AAC": AAC Low Complexity (AAC-LC)
- "HE AAC": High Efficiency AAC (HE-AAC)
- "AAC ELD": Enhanced Low Delay AAC (AAC-ELD)
- "Vorbis" : Ogg Vorbis

Description:
Use the <androidRecorderSetRecordCompressionType> handler to control the 
audio encoding used by the audio recorder.



Name: androidRecorderSetRecordFormat

Type: handler

Syntax: androidRecorderSetRecordFormat(<pRecordFormat>)

Summary: Set the record output format

Example: androidRecorderSetRecordFormat "ThreeGPP"

Parameters: 

pRecordFormat:
The record output format
"ThreeGPP":
"MPEG-4":
"AMR WB":
"AAC ADTS":
"WebM":

Description:
Use the <androidRecorderSetRecordFormat> handler to set the format of 
the output file.



Name: androidRecorderSetRecordInput

Type: handler

Syntax: androidRecorderSetRecordInput(<pInputSource>)

Summary: Set the record input source

Example: androidRecorderSetRecordInput "mic"

Parameters: 

pInputSource:
The record input source
- "Default": The device's default record input source
- "Mic": Microphone audio source
- "VoiceUplink": Voice call uplink (Tx) audio source
- "VoiceDownlink": Voice call uplink (Tx) audio source.
- "VoiceCall": Voice call uplink + downlink audio source
- "Camcorder": Microphone audio source tuned for video recording, with the same orientation as the camera if available
- "VoiceRecognition": Microphone audio source tuned for voice recognition
- "VoiceCommunication": Microphone audio source tuned for voice recognition
- "RemoteSubmix": Audio source for a submix of audio streams to be presented remotely
- "Unprocessed": Microphone audio source tuned for unprocessed (raw) sound if available, behaves like Default otherwise

Description:
Use the <androidRecorderSetRecordInput> handler to control the source 
and tuning of the record input.



Name: androidRecorderStopRecording

Type: handler

Syntax: androidRecorderStopRecording()

Summary: Stop recording

Example:
on mouseUp
    try
        androidRecorderStopRecording
    catch tError
        answer tError
    end try
end mouseUp

Description:
Use the <androidRecorderStopRecording> handler to stop the current 
recording. If no recording is currently happening, this handler will
throw an error.



Name: androidRecorderGetMaxAmplitude

Type: handler

Syntax: androidRecorderGetMaxAmplitude()

Summary: Returns the max amplitude of the recording since last sampled

Example:
-- Poll amplitude every 30 millisecs, and output values
command LogAmplitude
   put androidRecorderGetMaxAmplitude()
   send "LogAmplitude" to me in 30 millisecs
end LogAmplitude

Description:
Use the <androidRecorderGetMaxAmplitude> handler to retrieve the maximum
amplitude value reached during recording from the selected input source
since the amplitude was last retrieved.

<androidRecorderGetMaxAmplitude> returns 0 if no recording is currently
happening.



