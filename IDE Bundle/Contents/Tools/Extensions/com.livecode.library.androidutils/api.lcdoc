Library: com.livecode.library.androidutils

Type: module

Summary: A library of utility handlers for functions commonly needed by Android widgets.

version: 1.0.0

author: LiveCode

os: android


Name: AndroidHasPermission

Type: handler

Syntax: AndroidHasPermission(<pPermission>)

Summary: Returns true if permission <pPermission> has been granted by the user.

Parameters: 

pPermission:
The name of the permission to request.

-   "android.permission.READ_CALENDAR": permission to allow an application to read the device's calendar.
-   "android.permission.WRITE_CALENDAR": permission to allow an application to write to the device's calendar.
-   "android.permission.CAMERA": permission to allow an application to access the device's camera.
-   "android.permission.ACCESS_COARSE_LOCATION": permission to allow an application to access the device's coarse location.
-   "android.permission.ACCESS_FINE_LOCATION": permission to allow an application to access the device's fine location.
-   "android.permission.READ_CONTACTS": permission to allow an application to read data from the device's contacts.
-   "android.permission.WRITE_CONTACTS": permission to allow an application to write date to the device's contacts.
-   "android.permission.GET_ACCOUNTS": permission to allow an application to access to the list of accounts in the Accounts Service.
-   "android.permission.RECORD_AUDIO": permission to allow an application to allow an application to record audio.
-   "android.permission.READ_EXTERNAL_STORAGE": permission to allow an application to read data from the device's external storage.
-   "android.permission.WRITE_EXTERNAL_STORAGE": permission to allow an application to write data to the device's external storage.
-   "android.permission.READ_PHONE_STATE": permission to allow an application to access phone state, including the phone number of the device, current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device.
-   "android.permission.READ_PHONE_NUMBERS": permission to allow an application to access the device's phone number(s).
-   "android.permission.CALL_PHONE": permission to allow an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call.
-   "android.permission.ANSWER_PHONE_CALLS": permission to allow an application to answer an incoming phone call.
-   "android.permission.READ_CALL_LOG": permission to allow an application to read the user's call log.
-   "android.permission.WRITE_CALL_LOG": permission to allow an application to write to the user's call log.
-   "android.permission.ADD_VOICEMAIL": permission to allow an application to add voicemails into the system.
-   "android.permission.USE_SIP": permission to allow an application to use SIP service.
-   "android.permission.PROCESS_OUTGOING_CALLS": permission to allow an application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether.
-   "android.permission.SEND_SMS": permission to allow an application to send SMS messages.
-   "android.permission.RECEIVE_SMS": permission to allow an application to receive SMS messages
-   "android.permission.READ_SMS": permission to allow an application to read SMS messages.
-   "android.permission.RECEIVE_WAP_PUSH": permission to allow an application to receive WAP push messages.
-   "android.permission.RECEIVE_MMS": permission to allow an application to receive MMS messages.
-   "android.permission.BODY_SENSORS": permission to allow an application to access data from sensors that the user uses to measure what is happening inside his/her body, such as heart rate.

Returns: True if permission has been granted, false otherwise.

Description:
Use the <AndroidHasPermission> function to find out if permission
<pPermission> has been granted by the user.

>*Note:* Permission names are case sensitive.



Name: AndroidUnregisterLifecycleListener

Type: handler

Syntax: AndroidUnregisterLifecycleListener(<pListener>)

Summary: Unregister an object that is listening on application lifecycle events.

Parameters: 

pListener: The listener object to be unregistered

Returns:
True if the listener object was previously registered and has been successfully
unregistered.

Example:
private variable mLifecycleListener as optional JObject

public handler OnOpen() returns nothing
    put AndroidRegisterLifecycleListener(OnMyWidgetPaused, OnMyWidgetResumed) into mLifecycleListener
end handler

public handler OnClose() returns nothing
    AndroidUnregisterLifecycleListener(mLifecycleListener)
    put nothing into mLifecycleListener
end handler

Description:
Use the <AndroidUnregisterLifecycleListener> handler to unregister an object
created with <AndroidRegisterLifecycleListener> that is listening to application
lifecycle events. This will have the effect that any handlers that the listener
object is wrapping will no longer be called.



Name: AndroidRequestPermission

Type: handler

Syntax: AndroidRequestPermission(<pPermission>)

Summary:
Displays a dialog showing a permission request for <pPermission>. If a user
has already granted permission for <pPermission>, this function does nothing.

Returns true if permission <pPermission> has been granted by the user.

Parameters: 

pPermission:
The name of the permission to request.

-   "android.permission.READ_CALENDAR": permission to allow an application to read the device's calendar.
-   "android.permission.WRITE_CALENDAR": permission to allow an application to write to the device's calendar.
-   "android.permission.CAMERA": permission to allow an application to access the device's camera.
-   "android.permission.ACCESS_COARSE_LOCATION": permission to allow an application to access the device's coarse location.
-   "android.permission.ACCESS_FINE_LOCATION": permission to allow an application to access the device's fine location.
-   "android.permission.READ_CONTACTS": permission to allow an application to read data from the device's contacts.
-   "android.permission.WRITE_CONTACTS": permission to allow an application to write date to the device's contacts.
-   "android.permission.GET_ACCOUNTS": permission to allow an application to access to the list of accounts in the Accounts Service.
-   "android.permission.RECORD_AUDIO": permission to allow an application to allow an application to record audio.
-   "android.permission.READ_EXTERNAL_STORAGE": permission to allow an application to read data from the device's external storage.
-   "android.permission.WRITE_EXTERNAL_STORAGE": permission to allow an application to write data to the device's external storage.
-   "android.permission.READ_PHONE_STATE": permission to allow an application to access phone state, including the phone number of the device, current cellular network information, the status of any ongoing calls, and a list of any PhoneAccounts registered on the device.
-   "android.permission.READ_PHONE_NUMBERS": permission to allow an application to access the device's phone number(s).
-   "android.permission.CALL_PHONE": permission to allow an application to initiate a phone call without going through the Dialer user interface for the user to confirm the call.
-   "android.permission.ANSWER_PHONE_CALLS": permission to allow an application to answer an incoming phone call.
-   "android.permission.READ_CALL_LOG": permission to allow an application to read the user's call log.
-   "android.permission.WRITE_CALL_LOG": permission to allow an application to write to the user's call log.
-   "android.permission.ADD_VOICEMAIL": permission to allow an application to add voicemails into the system.
-   "android.permission.USE_SIP": permission to allow an application to use SIP service.
-   "android.permission.PROCESS_OUTGOING_CALLS": permission to allow an application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether.
-   "android.permission.SEND_SMS": permission to allow an application to send SMS messages.
-   "android.permission.RECEIVE_SMS": permission to allow an application to receive SMS messages
-   "android.permission.READ_SMS": permission to allow an application to read SMS messages.
-   "android.permission.RECEIVE_WAP_PUSH": permission to allow an application to receive WAP push messages.
-   "android.permission.RECEIVE_MMS": permission to allow an application to receive MMS messages.
-   "android.permission.BODY_SENSORS": permission to allow an application to access data from sensors that the user uses to measure what is happening inside his/her body, such as heart rate.

Returns: True if permission has been granted, false otherwise.

Description:
Use the <AndroidRequestPermission> command to request permission for
<pPermission> from the user.

>*Note:* Permission names are case sensitive.



Name: ApplicationContext

Type: handler

Syntax: ApplicationContext()

Summary: Get the application Context

Example:
__safe foreign handler _JNI_CreateButton(in pContext as JObject) returns JObject \
	binds to "java:android.widget.Button>new(Landroid/content/Context;)?ui"

handler NativeButtonView() returns JObject
	return _JNI_CreateButton(ApplicationContext())
end handler

Description:
Use the <ApplicationContext> handler to fetch the current application's
Context object.



Name: AndroidRegisterLifecycleListener

Type: handler

Syntax: AndroidRegisterLifecycleListener(<pPauseHandler>,<pResumeHandler>)

Summary: Register handlers to be called when on application lifecycle events.

Parameters: 

pPauseHandler: The handler to be called when the application is paused

pResumeHandler: The handler to be called when the application is resumed

Returns: A listener object that wraps the registered handlers.

Example:
private variable mLifecycleListener as optional JObject

public handler OnOpen() returns nothing
    put AndroidRegisterLifecycleListener(OnMyWidgetPaused, OnMyWidgetResumed) into mLifecycleListener
end handler

public handler OnClose() returns nothing
    AndroidUnregisterLifecycleListener(mLifecycleListener)
    put nothing into mLifecycleListener
end handler

private handler OnMyWidgetPaused() returns nothing
    -- Perform pause actions
end handler

private handler OnMyWidgetResumed() returns nothing
    -- Perform resume actions
end handler

Description:
Use the <AndroidRegisterLifecycleListener> handler to register handlers to
application lifecycle events. The handler <pPauseHandler> will be called when
the application is paused and enters into the background. The handler
<pResumeHandler> will be called when the application is resumed and returns from
the background.

A listener object will be returned that wraps the registered handlers and can be
used with <AndroidUnregisterLifecycleListener> to cancel the registration.



Name: AndroidPermissionExists

Type: handler

Syntax: AndroidPermissionExists(<pPermission>)

Summary: Returns true if <pPermission> is a valid Android permission name

Parameters: 

pPermission: The name of the permission to check.

Returns: True if <pPermission> is a valid Android permission name, false otherwise.

Description:
Use the <AndroidPermissionExists> function to check if <pPermission> is a valid
Android permission name.

>*Note:* Permission names are case sensitive.



Name: StringToAndroidColor

Type: handler

Syntax: StringToAndroidColor(<pString>)

Summary: Convert a color string to an integer for Android

Parameters: 

pString: The color string

Description:
Use the <StringToAndroidColor> handler to convert a string representing
a color to an integer that can be used with Android color APIs.



