Library: revidelibrary

Type: library

Summary: Main IDE library providing functionality for palettes and other IDE add-ons.

Name: ideNewControl

Type: message

Syntax: on ideNewControl

Summary: Sent when a control is created in the IDE

Description:
Handle the <ideNewControl> message to respond to the creation of controls using one of the
IDE palettes, or the create command.

>*Note:* The <ideNewControl> message is only sent to objects which have subscribed to it.
See the <revIDESubscribe> command for more details.

References: revIDESubscribe (command)


Name: ideSubscribe

Type: command

Syntax: ideSubscribe <pMessage>,<pObjectList>

Summary: Subscribes the calling object to receive the specified IDE message

pMessage: The message to subscribe to.

pObjectList: A list of objects, one per line, determining which calling objects the message should be restricted to.

Example:
on preOpenStack
   ideSubscribe "ideSelectedObjectsChanged"
end preOpenStack

on ideSelectedObjectsChanged
   # Handle the notification
end ideSelectedObjectsChanged

Example:
-- When the selection changes, subscribe to the idePropertyChanged message for the newly selected objects
on ideSelectedObjectsChanged
   ideSubscribe "idePropertyChanged", revIDESelectedObjects()
end ideSelectedObjectsChanged

Description: Subscribe to messages to have a notification sent for particular IDE actions.


Parameters:
:


:




Name: ideUserMainStacks

Type: function

Syntax: ideUserMainStacks()

Summary: A list of the current user mainstacks

Returns: A list of the names of the user mainstacks currently in memory, one per line

Description:
Use the <ideUserMainStacks> function to retrieve a list of the names of the mainstacks
in memory, excluding those which are part of the IDE.

See the <revIDEStackNameIsIDEStack> function for details of when a stack is considered
part of the IDE.

References: revIDEStackNameIsIDEStack (function)




Name: ideObjectTypeFromObject

Type: function

Syntax: ideObjectTypeFromObject(<pObjectID>)

Summary: The IDE object type corresponding to the given object

Parameters: 

pObjectID: An object ID

Returns: The IDE object type associated with the objects <pObjectID>

Example:
create field
put ideObjectTypeFromObject(it)  -- outputs com.livecode.interface.classic.Field
set the listBehavior of it to true
put ideObjectTypeFromObject(it)  -- outputs com.livecode.interface.classic.ListField

Description:
>*Note:* The type returned by <ideObjectTypeFromObject> can depend
on the values of the object's properties.



Name: revIDEUnsubscribe

Type: command

Syntax: revIDEUnsubscribe <pMessage>,<pObject>,<pObjectList>

Summary: Unsubscribes the calling object from the given message

pMessage: The message to unsubscribe from.

pObject: The long ID of the object you wish to unsubscribe from the message. This is an optional parameter, if not specified, the calling object will be used.

pObjectList: A list of objects, one per line.


Parameters:
:


:


:




Name: revIDESubscriptions

Type: function

Syntax: revIDESubscriptions()

Summary: Use to find out which messages the calling object is subscribed to.

returns: Return delimited list of messages, 1 per line.




Name: revIDELookupError

Type: function

Syntax: revIDELookupError(<pType>,<pError>)

Summary:
Returns the error description associated with the given
error code.

pType: either "compilation", "execution" or "warning"

pCode: the id of the error as returned by the engine.

Returns:
The description of the specified error.

>*Note:* if <pType> is "warning", this function will currently return
empty.

Parameters:
:


:




Name: revIDERunEditTools

Type: function

Syntax: revIDERunEditTools()

Summary: Returns information about the run and edit tools.

Returns:
an array, keyed by the run and edit tool type IDs,
of properties associated with each of those tools.



Name: revIDEGlobalVariables

Type: function

Syntax: revIDEGlobalVariables()

Summary: Use to get a list of of all the global variables.

returns: A comma delimited list of global variable names




Name: ideMainStacks

Type: function

Syntax: ideMainStacks()

Summary: A list of the current mainstacks

Returns: A list of the names of the mainstacks currently in memory, one per line

Description:
Use the <ideMainStacks> function to retrieve a list of the names of the mainstacks
in memory, taking into account the Show IDE Stacks preference.



Name: revIDEEditableStacks

Type: function

Syntax: revIDEEditableStacks()

Summary: Use to get a complete list of all editable stacks in the IDE.

returns: A return delimited list of stack names




Name: revIDEMakeSubstackMainstack

Type: command

Syntax: revIDEMakeSubstackMainstack <pObj>

Summary: Used by the PI to make a substack into a mainstack


Parameters:
:




Name: ideSetWindowBoundingRect

Type: command

Syntax: ideSetWindowBoundingRect 

Summary: Update the window bounding rect for the current IDE palette layout




Name: revIDEPushDefaultFolder

Type: command

Syntax: revIDEPushDefaultFolder <pFolder>

Summary: Stores the current default folder.

Parameters: 

pFolder: The new defaultFolder

Related: revIDEPopDefaultFolder

Example:
on myHandler
   revIDEPushDefaultFolder "/"
   repeat for each line tLine in the files
      # Do something to the files
   end repeat
   revIDEPopDefaultFolder
end myHandler

Description:
Pushes the current defaultFolder onto a list of defaultFolders.
If <pFolder> is specified, then the defaultFolder is set to <pFolder>.
revIDEPopDefaultFolder then pops the list and sets the
default folder to the popped value.



Name: revIDEStackNameIsIDEStack

Type: function

Syntax: revIDEStackNameIsIDEStack(<pStackName>)

Summary: Determines whether a stack is considered part of the IDE

pStackName: The short name of the stack

Returns: 

Description:
Use the <revIDEStackNameIsIDEStack> function to determine whether a stack is
considered part of the IDE, according to the name of the stack.

A stack is considered part of the IDE if any of the following are satisfied:
* Its name begins with "rev"
* It was loaded by the initialisation library
* Its name begins with "com.livecode."
* Its name is "message box, answer dialog, ask dialog, or home"
* Its _ideoverride property is true

Parameters:
:




Name: revIDEPopDefaultFolder

Type: command

Syntax: revIDEPopDefaultFolder 

Summary: Restores the default folder to the last saved path.

Related: revIDEPushDefaultFolder

Example:
on myHandler
   revIDEPushDefaultFolder
   set the defaultfolder to "/"
   repeat for each line tLine in the files
      # Do something to the files
   end repeat
   revIDEPopDefaultFolder
end myHandler

Description:
Pops the last stored defaultFolder and sets the
default folder to the popped value.



Name: revIDEObjectPropertyInfo

Type: function

Syntax: revIDEObjectPropertyInfo(<pObjectType>,<pPropName>)

Summary: Information pertaining to the property <pPropName> in the context of <pObjectType>.

Parameters: 

pPropName: One of the IDE canonical object property names.

pObjectType: One of the IDE's object types.

Returns: An array of information pertaining to the given property.

Description:
This function returns the information pertaining to the object property <pPropName>,
parsed from the files in Toolset/resources/supporting_files/. In some cases an individual
property's data can be overridden for a particular object type.

For a list of the canonical property names which are valid inputs to this function, see the
<idePropertyNames> function. For a list of the object type IDs which are valid inputs
to this function, see the <ideObjectTypes> function.

References: idePropertyNames (function), ideObjectTypes (function)




Name: ideObjectTypesFromObjectList

Type: function

Syntax: ideObjectTypesFromObjectList(<pObjectIDs>)

Summary: A list of the IDE object types corresponding to the list of objects given

Parameters: 

pObjectIDs: A list, one per line, of object IDs

Returns:
A list, one per line, of the IDE object types associated with
the objects in <pObjectIDs>



Name: revIDEIsFilesetStale

Type: function

Syntax: revIDEIsFilesetStale(pInputs, pOutputs, pRecursive, rError)

Summary: Compute whether derived files are up-to-date

Parameters: 

pInputs: A numerically-keyed array of filenames, or a filename

pOutputs: A numerically-keyed array of filenames, or a filename

pRecursive: True if folders should be checked recursively

rError: Set to a string describing an error, if necessary.

Description:
Checks whether the <pOutputs> are up-to-date relative to the
<pInputs>, by checking the modification times on the files.  Returns
true if any of the <pInputs> are newer than any of the <pOutputs>, or
if any of the <pOutputs> are missing.  Returns false if all of the
<pOutputs> are up-to-date.

If an error occurs, returns empty and sets <rError> to a descriptive
string.

The <pInputs> and the <pOutputs> are file sets, and can either be a
single filename as a string, or a numerically-keyed array of filenames.
It is an error for either file set is an array with non-numeric keys, or
for any filename to be the empty string.

If either file set is empty, the return value is true.  It is an error
for any of the input filenames to be missing.

If <pRecursive> is true, any filename in the <pInputs> or <pOutputs>
that is a directory is scanned recursively and its files are added to
the fileset.  If <pRecursive> is false, it is an error for either file
set to contain directories.



Name: revIDEGroupObjects

Type: command

Syntax: revIDEGroupObjects <objectList>

Summary: Group a list of objects in their layer order

Description: Group a list of objects in the order they are layered in

Parameters: 

objectList(string): A return delimited list of long object IDs

The result: An error string

It: The new group long ID or empty in the case the group could not be created




Name: revIDEGetPropertiesOfObjects

Type: function

Syntax: revIDEGetPropertiesOfObjects(<pObjects>)

Summary:
For a given list of objects, returns a structured array of properties, values and other meta data.

pObjects (string list): A list of IDs of the objects to obtain the properties for.

Return: An array of data about the objects' properties.

Example:
local tPropsArray
create button
put revIDEGetPropertiesOfObjects(it) into tPropsArray

# Get a list of the sections needed to display this object's property inspector
local tSections
put the keys of tPropsArray into tSections

Description:
<revIDEGetPropertiesOfObjects> returns an array of data about the given objects'
shared properties, in a form used by the property inspector. The array has a sub-array
for each section of the inspector in which one of the shared properties falls. Each of
these sub-arrays has a sub-array for each group within the section in which one of the
shared properties falls, each of which in turn has a sub-array for each property,
containing the values and metadata associated with it.

Parameters:
:




Name: revIDEPropertyInfo

Type: function

Syntax: revIDEPropertyInfo(<pPropName>)

Summary: Information pertaining to the property <pPropName>.

Parameters: 

pPropName: One of the IDE canonical object property names.

Returns: An array of information pertaining to the given property.

Description:
This function returns the information pertaining to the object property <pPropName>,
parsed from the file Toolset/resources/supporting_files/property_definitions.

Information about synonyms is not returned by this function. For a list of the canonical
property names which are valid inputs to this function, see the <idePropertyNames>
function.

References: idePropertyNames (function)




Name: revIDEStackIsIDEStack

Type: function

Syntax: revIDEStackIsIDEStack(<pLongID>)

Summary: Determines whether a stack is considered part of the IDE

pLongID: The long id of the stack.

Returns: 

Description:
Use the <revIDEStackIsIDEStack> function to determine whether a stack is
considered part of the IDE.

A stack is considered part of the IDE if it exists, and
* Its name begins with "rev"
* Its name begins with "com.livecode."
* Its name is "message box, answer dialog, ask dialog, or home"

>*Note:* If the name of the stack is already available, it is more efficient to
use the <revIDEStackNameIsIDEStack> function.

References: revIDEStackNameIsIDEStack (function)


Parameters:
:




Name: extensionInitialize

Type: command

Syntax: extensionInitialize 

Summary: Called when loading the IDE library




Name: revIDEGraphicTools

Type: function

Syntax: revIDEGraphicTools()

Summary: Returns information about the graphic creation tools.

Returns:
an array, keyed by the graphic creation tool types that appear
in the Tools palette, of properties associated with the objects created
by each of those graphic creation tools.



Name: ideMainStackOfObject

Type: function

Syntax: ideMainStackOfObject(<pLongID>)

Summary: The mainstack containing an object

pLongID: The long id of an object

Returns: the long id of the mainstack containing <pLongID>

Description:
Returns the long id of the mainstack of the object with long id <pLongID>.
To retrieve the immediate parent stack of an object which may be a substack,
use the <ideStackOfObject> function.

References: ideStackOfObject (function)


Parameters:
:




Name: revIDEClassicControls

Type: function

Syntax: revIDEClassicControls()

Summary: Returns information about the classic control tools.

Returns:
an array, keyed by the classic control tool types that appear
in the Tools palette, of properties associated with each of those classic
control tools.



Name: ideCompileCheck

Type: command

Syntax: ideCompileCheck <pScript>

Summary: Attempts to compile the target script

The result: If the compilation fails, the result is set to the description of the compile error


Parameters:
:




Name: revIDEGraphics

Type: function

Syntax: revIDEGraphics()

Summary: Returns information about the predefined graphic objects.

Returns:
an array, keyed by the predefined graphic object types that
appear in the Tools palette, of properties associated with each of those
graphic objects.



Name: ideStackOfObject

Type: function

Syntax: ideStackOfObject(<pLongID>)

Summary: The parent stack of an object

pLongID: The long id of an object

Returns: the long id of the parent stack of <pLongID>

Description:
Returns the long id of the (immediate) parent stack of the object with long id <pLongID>.
To retrieve the mainstack of an object, use the <ideMainStackOfObject> function.

References: ideMainStackOfObject (function)


Parameters:
:




Name: ideObjectTypes

Type: function

Syntax: ideObjectTypes()

Summary: A list of the object types, in 'type ID' form

Returns: A list of the object types, one per line.

Description: This function returns a list of the object types in the form used by the IDE.




Name: revIDEPaintTools

Type: function

Syntax: revIDEPaintTools()

Summary: Returns information about the paint tools.

Returns:
an array, keyed by the paint tool types that appear
in the Tools palette, of properties associated with each of
those paint tools.



Name: idePropertyNames

Type: function

Syntax: idePropertyNames(<pObjectType>)

Summary: A list of the object property names considered canonical by the IDE

Parameters: 

pObjectType: One of the IDE's object type IDs

Returns: A list of the object property names, one per line.

Description:
This function returns a list of the object property names considered canonical by
the IDE, as parsed from the file Toolset/resources/supporting_files/property_definitions.txt.

If the <pObjectType> parameter is used, this returns a list of the properties specific to
that object type, as parsed from the files in Toolset/resources/supporting_files/.

For a list of the object type IDs which are valid inputs to this function, see the <ideObjectTypes>
function.

References: ideObjectTypes (function)




Name: revIDEUnsubscribeAll

Type: command

Syntax: revIDEUnsubscribeAll <pObject>

Summary: Unsubscribes the object from all messages

pObject: The long ID of the object you wish to unsubscribe from all message. This is an optional parameter, if not specified, the calling object will be used.


Parameters:
:




Name: revIDEObjectsAreSelectable

Type: function

Syntax: revIDEObjectsAreSelectable(<pObjects>)

Summary:
Determine if a list of objects are selectable using
the select command

Parameters: 

pObjects: A return delimited list of object references

Description:
Returns true if all objects exist, are on an editable open stack and
have the same owner.

Returns: True if the objects can be selected




Name: revIDESubscribedObjects

Type: function

Syntax: revIDESubscribedObjects(<pMessage>)

Summary: Use to find out which objects are subscribed to a given message

pMessage: The name of the message.

returns: Return delimited list of object ID's, 1 per line.


Parameters:
:




Name: ideMessageSendWithParameters

Type: command

Syntax: ideMessageSendWithParameters <pMessage>,<pTriggeringObjects>,<pParamsArray>

Summary: Sends the given message to all subscribed objects.

Parameters: 

pMessage: The message to send

pTriggeringObjects:
A list, one per line, of the long ids of the objects triggering the message.
This is used for example with the <idePropertyChanged> message to
convey which objects had properties changed.

pParamsArray: A numerically keyed aray (starting at 1) of the parameters to pass along with the message.

Description:
Sends <pMessage> to all objects which have subscribed to it using
<revIDESubscribe>.

References: ideSubscribe (command), idePropertyChanged (message)




Name: revIDEObjectIsOnIDEStack

Type: function

Syntax: revIDEObjectIsOnIDEStack(<pLongID>)

Summary: Determines whether an object is considered part of the IDE

pLongID: The long id of the object.

Returns: 

Description:
Use the <revIDEObjectIsOnIDEStack> function to determine whether an object is
considered part of the IDE, that is if it is on a stack whose mainstack is part
of the IDE, according to the <revIDEStackIsIDEStack> function.

References: revIDEStackIsIDEStack (function)


Parameters:
:




Name: revIDEMessages

Type: function

Syntax: revIDEMessages()

Summary: Use to get a list of all the messages that the IDE allows subscriptions for

returns: Return delimited list of message names, 1 per line.

references: revIDESubscribedObjects (function), revIDESubscriptions (function), revIDEUnsubscribe (command), revIDESubscribe (command)




